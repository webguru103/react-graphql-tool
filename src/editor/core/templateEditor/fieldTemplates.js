import {
  DEFAULT_CHECKBOX_HEIGHT,
  DEFAULT_CHECKBOX_WIDTH, DEFAULT_INITIAL_HEIGHT, DEFAULT_INITIAL_WIDTH,
  DEFAULT_TEXTBOX_HEIGHT,
  DEFAULT_TEXTBOX_WIDTH,
  DEFAULT_DATE_HEIGHT,
  DEFAULT_DATE_WIDTH,
  DEFAULT_LINE_LENGTH,
  DEFAULT_SIGNATURE_HEIGHT,
  DEFAULT_SIGNATURE_WIDTH,
} from '../../constants';
import type { Data } from '../flowTypes';
import { randomId, get } from '../../../utility';

export const fieldTemplates = {
  text: ({
    name, x, y, width, height, assignee, data, positionLock,
  }: {
    name: string,
    x: number,
    y: number,
    width: number,
    height: number,
    assignee: ?string,
    data: ?Data,
    positionLock: ?boolean,
  }) => ({
    type: 'text',
    fieldName: name || 'New Text',
    deleted: false,
    autocomplete: false,
    x,
    y,
    width: width || DEFAULT_TEXTBOX_WIDTH,
    height: height || DEFAULT_TEXTBOX_HEIGHT,
    positionLock: positionLock || false,
    color: '#00000',
    fontSize: 15,
    assignee: assignee || '',
    dataValue: get(data, 'value.data', ['']),
    dataInput: {
      dataName: randomId(7),
      affectsSignature: get(data, 'affectsSignature', false),
      required: get(data, 'required', false),
    },
  }),
  date: ({
    name, x, y, assignee, data, dateValue, positionLock,
  }: {
    name: string,
    x: number,
    y: number,
    assignee: ?string,
    data: ?Data,
    dateValue?: string,
    positionLock: ?boolean,
  }) => ({
    type: 'date',
    fieldName: name || 'New Date',
    deleted: false,
    autoPopulate: true,
    x,
    y,
    width: DEFAULT_DATE_WIDTH,
    height: DEFAULT_DATE_HEIGHT,
    positionLock: positionLock || false,
    color: '#00000',
    fontSize: 15,
    assignee: assignee || '',
    dataValue: dateValue || get(data, 'value.data', ''),
    dataInput: {
      dataName: randomId(7),
      affectsSignature: get(data, 'affectsSignature', false),
      required: get(data, 'required', false),
    },
  }),
  checkbox: ({
    name, x, y, width, height, assignee, data, positionLock,
  }: {
      name: string,
      x: number,
      y: number,
      width: number,
      height: number,
      assignee: ?string,
      data: ?Data,
      positionLock: ?boolean,
  }) => ({
    type: 'checkbox',
    fieldName: name || 'New Checkbox',
    deleted: false,
    x,
    y,
    width: width || DEFAULT_CHECKBOX_WIDTH,
    height: height || DEFAULT_CHECKBOX_HEIGHT,
    positionLock: positionLock || false,
    color: '#00000',
    assignee: assignee || '',
    dataValue: get(data, 'value.data', 'false'),
    dataInput: {
      dataName: randomId(7),
      affectsSignature: false,
      required: false,
    },
  }),
  signature: ({
    fieldName, x, y, width, height, assignee, dataReference, positionLock,
  }: {
      fieldName?: string,
      x: number,
      y: number,
      height: number,
      width: number,
      assignee: ?string,
      dataReference?: ?number,
      positionLock: ?boolean,
  }) => ({
    type: 'signature',
    fieldName: fieldName || 'New Signature',
    deleted: false,
    x,
    y,
    width: width || DEFAULT_SIGNATURE_WIDTH,
    height: height || DEFAULT_SIGNATURE_HEIGHT,
    positionLock: positionLock || false,
    color: 'white',
    assignee: assignee || '',
    dataReference,
  }),
  initial: ({
    name, x, y, width, height, assignee, dataReference, positionLock,
  }: {
      name: string,
      x: number,
      y: number,
      width: number,
      height: number,
      assignee: ?string,
      dataReference?: ?number,
      positionLock: ?boolean,
  }) => ({
    type: 'initial',
    fieldName: name || 'New Initial',
    deleted: false,
    x,
    y,
    width: width || DEFAULT_INITIAL_WIDTH,
    height: height || DEFAULT_INITIAL_HEIGHT,
    positionLock: positionLock || false,
    color: 'white',
    assignee: assignee || '',
    dataReference,
  }),
  line: ({
    name, x, y, x2, y2, strokeThickness, color, positionLock,
  }: {
    name: string,
    x: number,
    y: number,
    x2?: number,
    y2?: number,
    strokeThickness: ?number,
    color: ?string,
    positionLock: ?boolean,
  }) => ({
    type: 'line',
    fieldName: name || 'New Line',
    deleted: false,
    x1: x,
    y1: y,
    x2: x2 || x + DEFAULT_LINE_LENGTH,
    y2: y2 || y,
    strokeThickness: strokeThickness || 3,
    positionLock: positionLock || false,
    color: color || '#00000',
  }),
};
